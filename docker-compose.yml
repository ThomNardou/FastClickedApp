
version: '3.4'


networks:
  db_network: 
    driver: bridge 
    ipam: 
      config:
        - subnet: 192.168.0.0/24 #definis la plage d adresse ip
services:
  fastclieckwebappmvc: 
    image: ${DOCKER_REGISTRY-}fastclieckwebappmvc # Image utilise 
    build:
      context: .
      dockerfile: FastClieckWebAppMVC/Dockerfile # Definis l endroit ou aller chercher le dockerfile
    networks: # assigne le conteneur au reseau
      db_network:
        ipv4_address: 192.168.0.2 # defini son addresse IP
    depends_on: 
      db: # definis la dependance du projet au conteneur DB
        condition: service_healthy # le conteneur db doit etre allume pour se lancer 
    container_name: FastClieckWebAppMVC
  db:
    image: mysql/mysql-server:5.7 # definis l image a utiliser pour le conteneur 
    container_name: mysql1 # Nom du conteneur 
    environment: # Variables d environnement pour la configuration de MySQL
      MYSQL_ROOT_PASSWORD: root # mdp de l utilisateur root
      MYSQL_USER: db_user # nom de l utilisateur 
      MYSQL_PASSWORD: db_user_pass # mdp de l utilisateur db_user
    restart: always # redemare automatiquement le conteneur 
    ports: # mappage sur les ports 
      - "3306:3306"  
    expose: # ouvres le port
      - 3306 
    volumes: # Definis les volumes
      - "./data.sql:/tmp/data.sql"
    networks: 
      db_network: # assigne le conteneur au reseau db_network
        ipv4_address: 192.168.0.10 # Definis son addresse IP
    command: "--init-file /tmp/data.sql" # Commande qui initialise le repertoire des donnees 
    healthcheck: # Verifie si le conteneur est bien allume
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s # Definis l interval entre chaque verification 
      retries: 5 # Nombre d essaies 